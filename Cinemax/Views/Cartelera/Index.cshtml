@model Cinemax.ViewModels.CarteleraViewModel

@{
    ViewBag.Title = "Cartelera";
    Layout = "~/Views/Shared/_LayoutCliente.cshtml";
    var fechaSeleccionada = ViewBag.FechaSeleccionada as DateTime?;
    var fechaInputValue = (fechaSeleccionada ?? DateTime.Today).ToString("yyyy-MM-dd");
    var generoSeleccionado = ViewBag.GeneroSeleccionado as string;
}
<style>
    .pagination .page-link {
        border-radius: 12px !important;
        border: none;
        color: #3b82f6; /* azul moderno */
        font-weight: 500;
        box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        transition: all 0.2s ease;
        background-color: #ffffff;
    }

        .pagination .page-link:hover {
            background-color: #e0f2fe; /* azul claro */
            color: #1d4ed8;
        }

    .pagination .page-item.active .page-link {
        background-color: #2563eb; /* azul fuerte */
        color: white;
        font-weight: 600;
        border: none;
    }

    .pagination .page-item.disabled .page-link {
        opacity: 0.5;
        background-color: #f1f5f9;
        cursor: default;
    }


    .chip {
        padding: 8px 20px;
        border-radius: 20px;
        background-color: #F5F5F5; /* Fondo suave */
        color: #1e293b; /* Texto oscuro */
        font-weight: 500;
        border: none;
        transition: all 0.2s ease-in-out;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        height: 38px;
    }

        .chip:hover {
            background-color: #e2e8f0;
            cursor: pointer;
        }

        .chip.active {
            background-color: #AF52DE; /* Violeta moderno */
            color: #ffffff;
            font-weight: 600;
        }

        .chip.icon {
            width: 38px;
            height: 38px;
            padding: 0;
        }

            .chip.icon:hover {
                background-color: #ddd6fe;
            }

    /* Alineación del calendario */
    #btnCalendario {
        width: 42px;
        height: 38px;
        padding: 0;
        border-radius: 20px;
        border: 1px solid #e5e7eb;
        background-color: .chip {
        padding: 8px 20px;
        border-radius: 20px;
        background-color: #f1f5f9; /* Fondo suave */
        color: #1e293b; /* Texto oscuro */
        font-weight: 500;
        border: none;
        transition: all 0.2s ease-in-out;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        height: 38px;
    }

    #btnCalendario:hover {
        background-color: #e0e7ff;
    }

    html, body {
        overflow-x: hidden;
    }

    @@media (max-width: 768px) {
        .flatpickr-calendar {
            transform: translateX(-25%);
        }
    }


</style>

<!-- Flatpickr CSS & JS desde CDN -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<div class="container py-4">

    <!-- Filtros: Géneros + Fecha -->
    <form method="get" class="mb-4">
        <div class="d-flex flex-wrap gap-2 align-items-center">
            <a href="@Url.Action("Index", "Cartelera", new { genero = "", fecha = fechaSeleccionada?.ToString("yyyy-MM-dd") })"
               class="chip @(string.IsNullOrEmpty(generoSeleccionado) ? "active" : "")">Todos</a>

            @foreach (var g in ViewBag.Generos as List<string>)
            {
                <a href="@Url.Action("Index", "Cartelera", new { genero = g, fecha = fechaSeleccionada?.ToString("yyyy-MM-dd") })"
                   class="chip @(generoSeleccionado == g ? "active" : "")">@g</a>
            }

            <!-- Selector de fecha como chip -->
            <!-- Botón tipo chip con icono de Bootstrap -->
            <div style="position: relative;">
                <button type="button" id="btnCalendario"
                class="chip icon"
                 aria-label="Seleccionar fecha">
                <i class="fa-solid fa-calendar-day" style="color: #AF52DE; font-size: 1.2rem;"></i>
                </button>

                <input type="text"
                 id="fechaSelector"
                name="fecha"
                class="d-none"
             value="@fechaInputValue?.ToString("yyyy-MM-dd")" />
            </div>

        </div>
    </form>


    <!-- Tarjetas de películas -->
    <div class="row">
        @foreach (var f in Model.Funciones)
        {
            <div class="col-md-6 mb-4">
                <a href="@Url.Action("Detalles", "Funciones", new { id = f.ID_Funcion })" class="text-decoration-none text-dark">
                    <div class="card flex-row shadow-sm border-0 rounded-4 overflow-hidden h-100" style="min-height: 220px;">
                        <!-- Imagen izquierda -->
                        <div class="col-4 p-0">
                            <img src="@f.Pelicula.PEL_ImagenURL"
                                 alt="@f.Pelicula.PEL_Titulo"
                                 class="img-fluid h-100 w-100 object-fit-cover"
                                 style="object-fit: cover;">
                        </div>

                        <!-- Contenido derecho -->
                        <div class="col-8 d-flex flex-column justify-content-between p-3">
                            <!-- Título y sinopsis -->
                            <div>
                                <h5 class="fw-semibold text-dark mb-1" title="@f.Pelicula.PEL_Titulo">@f.Pelicula.PEL_Titulo</h5>
                                <p class="text-dark small mb-3" style="max-height: 40px; overflow: hidden;">
                                    @f.Pelicula.PEL_Sinopsis
                                </p>

                            </div>




                            <!-- Detalles (verticales con separación) -->
                            <div class="text-dark small mb-3">
                                <div class="mb-4"><strong>Hora:</strong> @f.FUN_Fechahora.ToString("hh:mm tt")</div>
                                <div class="mb-4"><strong>Duración:</strong> @f.Pelicula.PEL_Duracion.ToString(@"hh\:mm") min</div>
                                <div class="mb-4"><strong>Sala:</strong> @f.Sala.SAL_Nombre</div>
                                <div><strong>Precio:</strong> $@f.FUN_Precio.ToString("F2")</div>
                            </div>


                            <!-- Enlace -->
                            <div class="mt-auto">
                                <span class="text-primary small fw-semibold">Ver detalles →</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>



        }
    </div>


    <!-- Paginación -->
    <div class="d-flex justify-content-center mt-3">
        <nav aria-label="Page navigation">
            <ul class="pagination pagination-lg gap-2 flex-wrap justify-content-center">
                @if (Model.PaginaActual > 1)
                {
                    <li class="page-item">
                        <a class="page-link px-3" href="@Url.Action("Index", new { pagina = 1, genero = generoSeleccionado, fecha = fechaSeleccionada?.ToString("yyyy-MM-dd") })">Primera</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link px-3" href="@Url.Action("Index", new { pagina = Model.PaginaActual - 1, genero = generoSeleccionado, fecha = fechaSeleccionada?.ToString("yyyy-MM-dd") })">
                            <iconify-icon icon="mdi:chevron-left"></iconify-icon>
                        </a>
                    </li>
                }

                @{
                    int totalPaginas = Model.TotalPaginas;
                    int paginaActual = Model.PaginaActual;
                    int rango = 2;
                    int desde = Math.Max(1, paginaActual - rango);
                    int hasta = Math.Min(totalPaginas, paginaActual + rango);

                    if (desde > 1)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }

                    for (int i = desde; i <= hasta; i++)
                    {
                        <li class="page-item @(i == paginaActual ? "active" : "")">
                            <a class="page-link px-3 @(i == paginaActual ? "bg-primary text-white border-0" : "")"
                               href="@Url.Action("Index", new { pagina = i, genero = generoSeleccionado, fecha = fechaSeleccionada?.ToString("yyyy-MM-dd") })">
                                @i
                            </a>
                        </li>
                    }

                    if (hasta < totalPaginas)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                }

                @if (Model.PaginaActual < Model.TotalPaginas)
                {
                    <li class="page-item">
                        <a class="page-link px-3" href="@Url.Action("Index", new { pagina = Model.PaginaActual + 1, genero = generoSeleccionado, fecha = fechaSeleccionada?.ToString("yyyy-MM-dd") })">
                            <iconify-icon icon="mdi:chevron-right"></iconify-icon>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link px-3" href="@Url.Action("Index", new { pagina = Model.TotalPaginas, genero = generoSeleccionado, fecha = fechaSeleccionada?.ToString("yyyy-MM-dd") })">Última</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const input = document.getElementById("fechaSelector");
        const trigger = document.getElementById("btnCalendario");

        if (!input || !trigger) return;

        const flat = flatpickr(input, {
            dateFormat: "Y-m-d",
            defaultDate: input.value || new Date(),
            positionElement: trigger,         
            position: "auto left",            
            onChange: function (selectedDates, dateStr) {
                const genero = new URLSearchParams(window.location.search).get("genero") || "";
                const url = `@Url.Action("Index", "Cartelera")?fecha=${dateStr}&genero=${genero}`;
                window.location.href = url;
            }
        });

        trigger.addEventListener("click", function () {
            flat.open();
        });
    });
</script>

